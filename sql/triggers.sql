/*
Enforce Grade Constraints
Prevent invalid grades from being entered (e.g., grades outside A-F).
*/

CREATE OR REPLACE TRIGGER TRG_GRADE_CHECK
BEFORE UPDATE OF GRADE ON ENROLLMENT
FOR EACH ROW
BEGIN
    IF :NEW.GRADE NOT IN ('A', 'B', 'C', 'D', 'F') THEN
        RAISE_APPLICATION_ERROR(-20010,'INVALID GRADE! ALLOWED VALUES ARE A,B,C,D,E,F');
    END IF;

    IF :OLD.END_DATE > SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20011,'GRADE CANNOT BE UPDATED UNTIL THE ENROLLMENT PERIOD HAS ENDED');
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('GRADE UPDATED SUCCESSFULLY!');
END;



/*
Update CGPA on CREDIT_HOUR Change
Automatically recalculate a student’s CGPA when their CREDIT_HOURS data changes.
*/


CREATE OR REPLACE TRIGGER TRG_CGPA
BEFORE INSERT OR UPDATE OF CREDIT_HOURS ON STUDENT
FOR EACH ROW
DECLARE
    V_TOTAL_GRADE_POINTS  NUMBER :=0 ;
    V_TOTAL_CREDIT_HOURS  NUMBER :=0 ;
    V_GPA NUMBER := NULL ;
    V_STUDENT_ID NUMBER ;
BEGIN
    
    V_STUDENT_ID := :NEW.STUDENT_ID;

    SELECT SUM(E.GRADE * C.CREDIT_HOURS), SUM(C.CREDIT_HOURS)
    INTO V_TOTAL_GRADE_POINTS , V_TOTAL_CREDIT_HOURS
    FROM ENROLLMENT E JOIN COURSE C 
    ON E.COURSE_ID = C.COURSE_ID
    WHERE E.STUDENT_ID = V_STUDENT_ID ;

    IF V_TOTAL_CREDIT_HOURS > 0 THEN
        V_GPA := V_TOTAL_GRADE_POINTS / V_TOTAL_CREDIT_HOURS;
    ELSE
        V_GPA := NULL;
    END IF;

    UPDATE STUDENT SET CGPA = V_GPA WHERE STUDENT_ID = V_STUDENT_ID;
END;


/*
Auto-Assign Course Credit Hours
Automatically update a student’s total credit hours when they finish course.
*/

CREATE OR REPLACE TRIGGER TRG_AUTO_ASSGIN_CH
AFTER UPDATE OF GRADE ON ENROLLMENT
FOR EACH ROW
BEGIN
IF :NEW.GRADE IN ('A', 'B', 'C', 'D') THEN
    UPDATE STUDENT SET CREDIT_HOURS = CREDIT_HOURS + (SELECT CREDIT_HOURS FROM COURSE WHERE COURSE_ID = :NEW.COURSE_ID)
    WHERE STUDENT_ID = :NEW.STUDENT_ID;
END IF;

END;